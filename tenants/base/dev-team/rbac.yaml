---
## TODO: Instantiate a Dev Team Capsule Tenant
#
# Tenant Namespaces will be instantiated by the Tenant user
# themselves. I.e. the GitOps way, by the Tenat Owner gitops-reconciler
# Service Account.
#
#apiVersion: v1
#kind: Namespace
#metadata:
#  labels:
#    toolkit.fluxcd.io/tenant: dev-team
#  name: apps
#

---
#
# A Tenant as a set of Namespaces, is owned by the Service Account
# gitops-reconciler, instead of dev-team.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  #name: gitops-reconciler
  name: dev-team-gitops-reconciler
  #namespace: apps
  namespace: default

---
apiVersion: capsule.clastix.io/v1beta1
kind: Tenant
metadata:
  name: dev-team
spec:
  owners:
  #- name: system:serviceaccount:apps:gitops-reconciler
  - name: system:serviceaccount:default:dev-team-gitops-reconciler
    kind: ServiceAccount

---
#
# The service account gitops-reconciler has to be part of Capsule group.
#
apiVersion: capsule.clastix.io/v1alpha1
kind: CapsuleConfiguration
metadata:
  name: default
spec:
  userGroups:
  #- system:serviceaccounts:apps
  - system:serviceaccounts:default

#---
## TODO: Instantiate a Dev Team Capsule Tenant Owner
#
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  labels:
#    toolkit.fluxcd.io/tenant: dev-team
#  name: dev-team
#  namespace: apps
#
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: RoleBinding
#metadata:
#  labels:
#    toolkit.fluxcd.io/tenant: dev-team
#  name: gotk-reconciler
#  namespace: apps
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: cluster-admin
#subjects:
#- kind: User
#  name: gotk:apps:reconciler
#- kind: ServiceAccount
#  name: dev-team
#  namespace: apps
